{
  "name": "rjs",
  "version": "3.1.0",
  "description": "A library of Javascript utility functions with an emphasis on Functional Programming.",
  "main": "rjs.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "open -a Google\\ Chrome test/index.html"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/metaraine/rjs.git"
  },
  "keywords": [
    "functional",
    "utility"
  ],
  "author": {
    "name": "Raine Lourie"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "ba9f4a85fd605fdad2bde942d59b57c7415bd709",
  "readme": "A library of Javascript utility functions with an emphasis on Functional Programming.\r\n\r\n# Installation\r\n\r\n## Browser Land\r\n\r\nDownload rjs.js from the repository, or get it with curl:\r\n\r\n\tcurl https://raw.github.com/RaineOrShine/rjs/master/rjs.js > rjs.js\t\r\n\r\nInclude it:\r\n\r\n\t<script type=\"text/javascript\" src=\"rjs.js\"></script>\r\n\r\n## Node Land\r\n\r\nFrom the command line:\r\n\r\n\tnpm install rjs\r\n\r\nOr add it as a dependency:\r\n\r\n\tnpm view rjs version\t# find out the latest published version\r\n\r\n\t# add to package.json\r\n\t\"dependencies\": {\r\n\t    \"rjs\":            \"~{VERSION}\",\r\n\t    ...\r\n\r\n\tnpm update\r\n\r\nRequire it:\r\n\r\n\tRJS = require(\"rjs\");\r\n\r\n# Prototyping Onto Native Objects\r\nWhile controversial, prototyping functions onto some native objects can result in especially elegant code.\r\n\r\nThe majority of the functions in RJS center around native types like String, Number, Array, and Function, making them \r\nperfect candidates for prototyping. Nothing is prototyped onto Object.\r\n\r\nInstead of this:\r\n\r\n\tRJS.map(people, function(person) {\r\n\t\treturn RJS.supplant(\"Hello {0}!\", [person.name]);\r\n\t});\r\n\r\nConsider the following: \r\n\r\n\tpeople.map(function(person) {\r\n\t\treturn \"Hello {0}!\".supplant([person.name]);\r\n\t});\r\n\r\nBeautiful! It's more intuitive because it conforms to the subject-verb-object structure of the English language.\r\n\r\nAdding RJS functions to native objects is off by default. To opt-in, call RJS.installPrototypes:\r\n\r\n\tRJS.installPrototypes();\r\n\r\nRequire and install prototypes in one line:\r\n\r\n\tRJS = require(\".rjs\").installPrototypes();\r\n\r\n# Unit Tests\r\n\r\n\tnpm test\r\n\r\nor open test/index.html in a browser.\r\n\r\n",
  "_id": "rjs@3.1.0",
  "_from": "rjs@"
}
