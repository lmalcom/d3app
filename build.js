({
    
    baseUrl: "js/classes",
    packages: [
        {
            name: 'jquery', 
            location: '../libs', 
            main:'jquery'
        }, 
        {
            name: 'underscore', 
            location: '../libs', 
            main:'underscore'
        }, 
        {
            name: 'backbone', 
            location: '../libs', 
            main:'backbone'
        }, 
        {
            name: 'less', 
            location: '../libs', 
            main:'less'
        },
        {
            name: 'hammer', 
            location: '../libs', 
            main: 'hammer'
        }, 
        {
            name: 'jquery.hammer', 
            location: '../libs', 
            main: 'jquery.hammer'
        }, 
        {
            name: 'require', 
            location: '../libs', 
            main: 'require'
        }, 
        {
            name: 'd3', 
            location: '../libs', 
            main: 'd3'
        }, 
    ],
    shim : {
        underscore : 
        {
            exports:'_'
        }, 
        backbone: 
        {
          deps: ["underscore", "jquery"],
          exports: "Backbone"
        }, 
        d3: 
        {
            exports:'d3'
        }
    },
    locale: "en-us",
    //optimize: "none",

    //name: "main",
    include: ["./../main"],
    //insertRequire: ['main'],
    out: "optimized-file.js",

    //In RequireJS 2.0, "out" can be a function. For single JS file
    //optimizations that are generated by calling requirejs.optimize(),
    //using an out function means the optimized contents are not written to
    //a file on disk, but instead pass to the out function:
    /*out: function (text) {
        //Do what you want with the optimized text here.
    },*/
})
